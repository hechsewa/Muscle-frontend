{"version":3,"sources":["components/NavigationBar.js","components/Homepage.js","components/Aboutpage.js","components/Audioplayer.js","components/Rating.js","components/Songpage.js","components/NameForm.js","components/Creditspage.js","App.js","serviceWorker.js","index.js","components/imgs/logo-pelne-grey.png","components/imgs/logo-pelne-pink.png"],"names":["NavigationBar","className","href","src","logo","height","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Homepage","props","startSongs","bind","e","this","history","push","window","location","reload","logoPink","alt","onClick","React","Component","Aboutpage","Audioplayer","filename","state","playing","cover","title","band","genre","recommended","controls","process","Rating","stars","value","dynamicValue","newValue","setState","onRatingChange","starSpans","v","key","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","handleClick","Songpage","redirect","ratingChanged","songId","match","params","userId","userid","img","fetchedMeta","album","nextSong","createRef","componentWillMount","getBase64","axios","get","responseType","then","response","base64","btoa","Uint8Array","data","reduce","byte","String","fromCharCode","catch","error","console","log","r","alert","newId","parseInt","grade_obj","options","method","headers","JSON","stringify","url","res","ref","withRouter","NameForm","name","age","gender","user_id","handleNameChange","handleAgeChange","handleSubmit","radioChange","postUserData","event","target","toString","isNaN","user","preventDefault","currentTarget","onSubmit","htmlFor","onChange","placeholder","checked","Creditspage","App","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.bca6365a.chunk.js","sourcesContent":["import React from \"react\"\r\nimport logo from './imgs/logo-pelne-grey.png'\r\n\r\nfunction NavigationBar() {\r\n    return (\r\n        <header className=\"site-header\">\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-steel fixed-top\">\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand mr-4\" href=\"/\">\r\n                        <img className=\"logoHeader\" src={logo} height='50px'/>\r\n                    </a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggle\"\r\n                            aria-controls=\"navbarToggle\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarToggle\">\r\n                        <div className=\"navbar-nav mr-auto\">\r\n                            <a className=\"nav-item nav-link\" href=\"/\">strona główna</a>\r\n                            <a className=\"nav-item nav-link\" href=\"/about\">o aplikacji</a>\r\n                            <a className=\"nav-item nav-link\" href=\"/credits\">źródła</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default NavigationBar\r\n\r\n","import React from \"react\"\r\nimport logoPink from './imgs/logo-pelne-pink.png'\r\n\r\nclass Homepage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.startSongs = this.startSongs.bind(this);\r\n    }\r\n\r\n    startSongs(e) {\r\n        this.props.history.push('/metric');\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <img className='logoHome' src={logoPink} alt={'muscle logo pink'} />\r\n                <div className=\"welcome\">\r\n                    <p>Cześć! Dzięki za chwilę twojego czasu. Ocenianie powinno zająć maksymalnie do 30 minut.\r\n                        Jeśli chcesz wiedzieć więcej o projekcie - kilknij\r\n                        <a href=\"/about\"> tutaj</a>.\r\n                    </p>\r\n                </div>\r\n\r\n                <h4>Jak będzie wyglądać ankieta?</h4>\r\n                <div className=\"instrukcje\">\r\n                    <ul>\r\n                        <li>posłuchaj 30 sekundowego fragmentu utworu</li>\r\n                        <li>oceń utwór w skali 1-5, przyznając mu gwiazdki</li>\r\n                        <li>po kliknięciu przycisku strzałki strona automatycznie przeniesie Cię do następnego utworu</li>\r\n                        <li>powtórz operację aż dojdziesz do strony informującej o końcu oceniania</li>\r\n                    </ul>\r\n                </div>\r\n                <p>\r\n                    Kolejne wyświetlane przez aplikację utwory będą bazować na twoich poprzednich ocenach i dobierać\r\n                    piosenki,\r\n                    które odpowiadają twoim gustom. Im więcej utworów ocenisz, tym dokładniejsze będą propozycje.\r\n                    Nie przerywaj badania, wyniki zostaną zapisane dopiero na końcu. Jak\r\n                    będziesz gotowy\r\n                    kliknij poniższy przycisk, aby rozpocząć.\r\n                </p>\r\n                <div className=\"buttonHolder\">\r\n                    <button className=\"buttonMain\" type=\"button\" onClick={this.startSongs}>ROZPOCZNIJ</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Homepage;\r\n\r\n","import React from \"react\"\r\n\r\nfunction Aboutpage() {\r\n    return(\r\n        <div className=\"about\">\r\n            <h1>O MuSCLe</h1>\r\n            <p>MuSCLe jest aplikacją webową z systemem rekomendacji piosenek, która powstała w ramach mojej pracy\r\n            inżynierskiej. Tematem pracy jest rekomendacja utworów muzycznych na podstawie ocen innych użytkowników\r\n                oraz cech audio piosenek.<br/><br/>\r\n            Głównym celem mojej pracy jest jednak zebranie danych, czyli Twoich ocen utworów. Im więcej użytkowników\r\n            przejdzie proces oceniania, tym więcej danych zbierzemy, dlatego podaj linka dalej znajomym :)\r\n            Takie dane są potrzebne do lepszego działania systemów rekomendacji bazujących na podobieństwie innych\r\n            użytkowników, jak i tych hybrydowych.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Aboutpage;\r\n","import React from \"react\"\r\nimport ReactAudioPlayer from 'react-audio-player';\r\n\r\n\r\nclass Audioplayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let filename = `/songs/song${this.props.id-1}.mp3`;\r\n        this.state = {\r\n            playing: false,\r\n            src: filename,\r\n            cover: 'https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/514dc845-04f5-4538-8a4f-869b64243265/1-2.jpg',\r\n            title: this.props.title,\r\n            band: this.props.band,\r\n            genre: this.props.genre,\r\n            recommended: this.props.recommended\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n           <div className=\"audio-container\">\r\n               <div className=\"coverPhoto\">\r\n                   <img src={this.props.cover==='' ? this.state.cover : this.props.cover} alt=\"CD cover\"/>\r\n               </div>\r\n               <div className=\"metadata\">\r\n                   <ul>\r\n                       <li><b>Tytuł</b>: {this.props.title}</li>\r\n                       <li><b>Wykonawca</b>: {this.props.band}</li>\r\n                       <li><b>Gatunek</b>: {this.props.genre}</li>\r\n                       <li><b>Wybrane dla ciebie</b>: {this.props.recommended}</li>\r\n                   </ul>\r\n               </div>\r\n               <div className=\"player\">\r\n                  <audio controls>\r\n                      <source src = {process.env.PUBLIC_URL + this.state.src} />\r\n                  </audio>\r\n               </div>\r\n           </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Audioplayer;","import * as React from \"react\";\r\n//src: https://codepen.io/dwayne/pen/qakVOG\r\n\r\nclass Rating extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.stars = this.props.stars;\r\n        this.state = {\r\n            value: this.stars,\r\n            dynamicValue: this.stars\r\n        };\r\n    }\r\n\r\n  handleClick(newValue) {\r\n    this.setState({\r\n      value: newValue,\r\n      dynamicValue: newValue\r\n    });\r\n      this.props.onRatingChange(this.state.dynamicValue);\r\n    };\r\n\r\n  handleMouseEnter(newValue) {\r\n    this.setState({ dynamicValue: newValue });\r\n  };\r\n\r\n  handleMouseLeave(newValue) {\r\n    this.setState({ dynamicValue: this.state.value });\r\n  };\r\n\r\n  render() {\r\n    const starSpans = [];\r\n\r\n    for (let v = 1; v <= 5; v++) {\r\n      if (v <= this.state.dynamicValue) {\r\n        starSpans.push(\r\n          <span\r\n              key={v}\r\n              className=\"star\"\r\n              onMouseEnter={this.handleMouseEnter.bind(this, v)}\r\n              onMouseLeave={this.handleMouseLeave.bind(this, v)}\r\n              onClick={this.handleClick.bind(this, v)}\r\n              >\r\n            ★\r\n          </span>\r\n        );\r\n      } else {\r\n        starSpans.push(\r\n          <span\r\n              key={v}\r\n              className=\"star\"\r\n              onMouseEnter={this.handleMouseEnter.bind(this, v)}\r\n              onMouseLeave={this.handleMouseLeave.bind(this, v)}\r\n              onClick={this.handleClick.bind(this, v)}\r\n              >\r\n            ☆\r\n          </span>\r\n        );\r\n      }\r\n    }\r\n\r\n    return <div>{starSpans}</div>;\r\n  };\r\n}\r\n\r\nexport default Rating;","import React from \"react\"\r\nimport Audioplayer from \"./Audioplayer\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport IconButton from \"@material-ui/core/IconButton/index\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Rating from \"./Rating\";\r\n\r\nclass Songpage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.redirect = this.redirect.bind(this);\r\n        this.ratingChanged = this.ratingChanged.bind(this);\r\n        this.state = {\r\n            songId: this.props.match.params.id,\r\n            userId: this.props.match.params.userid,\r\n            stars: 0,\r\n            img: '',\r\n            fetchedMeta: {\r\n                album: '',\r\n                band: '',\r\n                genre: '',\r\n                title: ''\r\n            }\r\n        };\r\n        this.nextSong = React.createRef();\r\n        this.componentWillMount = this.componentWillMount.bind(this);\r\n        this.getBase64 = this.getBase64.bind(this)\r\n    };\r\n\r\n    getBase64() {\r\n        axios\r\n            .get('http://127.0.0.1:5000/pic/cover'+this.state.songId+'.jpg',\r\n                { responseType: 'arraybuffer' })\r\n            .then(response => {\r\n                const base64 = btoa(\r\n                    new Uint8Array(response.data).reduce(\r\n                    (data, byte) => data + String.fromCharCode(byte),\r\n                    '',),);\r\n                if (base64 === '') {\r\n                    this.setState({ img: ''});\r\n                } else {\r\n                    this.setState({ img: \"data:;base64,\" + base64 });\r\n                }\r\n                }).catch((error) => {\r\n                console.log(error);\r\n        })\r\n    }\r\n\r\n    componentWillMount () {\r\n        axios.get('http://127.0.0.1:5000/meta/'+this.state.songId)\r\n            .then( (response) => {\r\n                console.log(\"response\", response);\r\n                this.setState({\r\n                    fetchedMeta: response.data\r\n                });\r\n            }).catch( (error) => {\r\n            console.log(error);});\r\n        this.getBase64();\r\n     }\r\n\r\n    ratingChanged(r) {\r\n        this.setState({stars: r});\r\n    }\r\n\r\n    redirect(e) {\r\n        if (this.state.stars === 0) {\r\n            window.alert(\"Proszę ocenić utwór\");\r\n        } else {\r\n            let newId = parseInt(this.state.songId);\r\n            newId = newId + 1;\r\n            //zapis oceny do bazy\r\n\r\n            const grade_obj = {\r\n            \"song_id\": this.state.songId,\r\n            \"user_id\": this.state.userId,\r\n            \"grade\": this.state.stars\r\n            };\r\n\r\n            let urlL = \"http://localhost:5000/user/1/song/1/grade\";\r\n            const options = {\r\n             method: 'POST',\r\n             headers: { 'content-type': 'application/json' },\r\n             data: JSON.stringify(grade_obj),\r\n             url: urlL,\r\n            };\r\n            axios(options).then((res) => {\r\n            console.log(res);\r\n            if (newId > 107 || newId < 0) {\r\n                this.props.history.push('/finish');\r\n                window.location.reload();\r\n            } else {\r\n                this.props.history.push('/user/'+this.state.userId+'/song/' + newId);\r\n                window.location.reload();\r\n            }\r\n            });\r\n        }\r\n    }\r\n\r\n    // <button className=\"buttonGrade\" type=\"button\" onClick={disliked}>-</button>\r\n    render() {\r\n        return (\r\n            <div className=\"audio\">\r\n                <h1>Ocena piosenki</h1>\r\n                <Audioplayer cover={this.state.img}\r\n                             id = {this.state.songId}\r\n                             title={this.state.fetchedMeta.title}\r\n                             band={this.state.fetchedMeta.band}\r\n                             genre={this.state.fetchedMeta.genre}\r\n                             recommended={'yes'}\r\n                />\r\n                <br/>\r\n                <div className=\"btnPanel\">\r\n                    <div className=\"buttonGradeHolder\">\r\n                        <Rating stars={this.state.stars} onRatingChange={this.ratingChanged}/>\r\n                    </div>\r\n                    <div className=\"btnNextHolder\">\r\n                        <IconButton className=\"nextBtn\"\r\n                                            aria-label=\"next song\"\r\n                                            onClick={this.redirect}\r\n                                            ref={this.nextSong}>\r\n                                    <ForwardIcon/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default withRouter(Songpage);","import * as React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass NameForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            age: '',\r\n            gender: '',\r\n            user_id: 0\r\n        };\r\n\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleAgeChange = this.handleAgeChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.radioChange = this.radioChange.bind(this);\r\n        this.postUserData = this.postUserData.bind(this);\r\n    };\r\n\r\n    handleNameChange(event) {\r\n    this.setState({name: event.target.value});\r\n    };\r\n\r\n    handleAgeChange(event) {\r\n    this.setState({age: event.target.value});\r\n    };\r\n\r\n    postUserData() {\r\n        const user = {\r\n            pseudo: this.state.name.toString(),\r\n            age: this.state.age.toString(),\r\n            gender: this.state.gender.toString()\r\n        };\r\n    }\r\n\r\n    handleSubmit(event) {\r\n     //validation\r\n     if (this.state.name === '') {\r\n         alert('Proszę podać pseudonim');\r\n     } else if (this.state.age === '') {\r\n         alert('Proszę podać wiek');\r\n     } else if (this.state.gender === '') {\r\n         alert('Proszę podać płeć');\r\n     } else if (isNaN(this.state.age)) {\r\n         alert(\"Wiek to tylko liczba\");\r\n     } else {\r\n         //alert('Podano następujące imię: ' + this.state.name);\r\n         //this.postUserData();\r\n        const user = {\r\n            \"pseudo\": this.state.name.toString(),\r\n            \"age\": this.state.age.toString(),\r\n            \"gender\": this.state.gender.toString()\r\n        };\r\n\r\n        let urlL = \"http://localhost:5000/user/1\";\r\n        const options = {\r\n          method: 'POST',\r\n          headers: { 'content-type': 'application/json' },\r\n          data: JSON.stringify(user),\r\n          url: urlL,\r\n        };\r\n        axios(options).then((res) => {\r\n            this.setState({user_id: res.data.user_id});\r\n            if (this.state.user_id !== 0) {\r\n                this.props.history.push('/user/' + this.state.user_id + '/song/1');\r\n                window.location.reload();\r\n            } else {\r\n                alert(\"Coś poszło nie tak, spróbuj ponownie.\");\r\n            }\r\n        });\r\n     }\r\n    event.preventDefault();\r\n    };\r\n\r\n    radioChange(e) {\r\n    this.setState({\r\n      gender: e.currentTarget.value\r\n    });\r\n  };\r\n\r\n    render(){\r\n        return (\r\n            <div className='nameForm'>\r\n                <h2>Metryczka</h2>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"nameInput\">Pseudonim</label>\r\n                    <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleNameChange}\r\n                           className=\"form-control\" id=\"nameInput\" placeholder=\"pseudo\"/>\r\n                </div>\r\n                 <div className=\"form-group\">\r\n                    <label htmlFor=\"ageInput\">Wiek</label>\r\n                    <input type=\"text\" name=\"name\" value={this.state.age} onChange={this.handleAgeChange}\r\n                           className=\"form-control\" id=\"ageInput\" placeholder=\"wiek\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"genderInput\">Płeć</label>\r\n                    <br/>\r\n                    <div className=\"radio-option\">\r\n                        <input type=\"radio\"\r\n                               value=\"f\"\r\n                               checked={this.state.gender === \"f\"}\r\n                               onChange={this.radioChange} /> kobieta\r\n                    </div>\r\n                    <div className=\"radio-option\">\r\n                        <input type=\"radio\"\r\n                               value=\"m\"\r\n                               checked={this.state.gender === \"m\"}\r\n                               onChange={this.radioChange}/> mężczyzna\r\n                    </div>\r\n                    <div className=\"radio-option\">\r\n                        <input type=\"radio\"\r\n                               value=\"n\"\r\n                               checked={this.state.gender === \"n\"}\r\n                               onChange={this.radioChange}/> wolę nie podawać\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" value=\"Rozpocznij\" className=\"buttonMain\" />\r\n            </form>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default withRouter(NameForm);","import React from \"react\"\r\n\r\nfunction Creditspage() {\r\n    return(\r\n        <div className=\"credits\">\r\n            <h1>Źródła piosenek</h1>\r\n            <p>Lista utworów użytych w aplikacji pochodzących ze\r\n                strony <a href=\"https://freemusicarchive.org/\">freemusciarchive.org</a> objętych licencją\r\n                <a href=\"https://creativecommons.org/\"> Creative Commons</a>:\r\n                <ul>\r\n                    <li></li>\r\n                </ul>\r\n            Lista utworów użytych w aplikacji za zgodą artystów:\r\n                <ul>\r\n                    <li>DixiBand - All Of Me</li>\r\n                    <li>DixiBand - Sweet Geaorgia Brown</li>\r\n                    <li>Vincent Bella - Birdcage</li>\r\n                    <li>Dżindżer Project - We just want to be heard</li>\r\n                </ul>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Creditspage;","import React, {useEffect} from 'react';\r\nimport NavigationBar from \"./components/NavigationBar\";\r\nimport Homepage from \"./components/Homepage\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Aboutpage from \"./components/Aboutpage\";\r\nimport Songpage from \"./components/Songpage.js\";\r\nimport NameForm from \"./components/NameForm\";\r\nimport Creditspage from \"./components/Creditspage\";\r\n\r\nfunction App() {\r\n    /*useEffect(() => {\r\n      fetch(\"/home\").then(response => response.json().then(data => {\r\n          console.log(data);\r\n      })\r\n      );\r\n    },[]);*/\r\n  return (\r\n      <Router>\r\n        <div className=\"container\">\r\n            <NavigationBar/>\r\n            <Switch>\r\n                <Route path={\"/about\"} component={Aboutpage}/>\r\n                <Route path={\"/home\"} component={Homepage} />\r\n                <Route path={\"/user/:userid/song/:id\"} component={Songpage} />\r\n                <Route path={\"/metric\"} component={NameForm} />\r\n                <Route path={\"/credits\"} component={Creditspage} />\r\n                <Route path={\"/\"} component={Homepage} />\r\n            </Switch>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './muscle.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo-pelne-grey.c7c84628.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-pelne-pink.cbcc3bca.png\";"],"sourceRoot":""}