{"version":3,"sources":["components/NavigationBar.js","components/Homepage.js","components/Aboutpage.js","components/Audioplayer.js","components/Songpage.js","App.js","serviceWorker.js","index.js","components/01 All Of Me.mp3"],"names":["NavigationBar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Homepage","props","startSongs","bind","e","this","history","push","window","location","reload","onClick","React","Component","Aboutpage","Audioplayer","state","playing","src","sound","cover","title","band","genre","recommended","alt","controls","Songpage","liked","disliked","redirect","songId","match","params","like","thumbDown","createRef","thumbUp","nextSong","preventDefault","upBtn","current","downBtn","style","color","console","log","alert","newId","parseInt","ref","fontSize","withRouter","App","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9fa866e4.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction NavigationBar() {\r\n    return (\r\n        <header className=\"site-header\">\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-steel fixed-top\">\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand mr-4\" href=\"/\">MuSCLe: MUsic Score Collection for machine LEarning</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggle\"\r\n                            aria-controls=\"navbarToggle\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarToggle\">\r\n                        <div className=\"navbar-nav mr-auto\">\r\n                            <a className=\"nav-item nav-link\" href=\"/\">Strona główna</a>\r\n                            <a className=\"nav-item nav-link\" href=\"/about\">O MuSCLe</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default NavigationBar\r\n\r\n","import React from \"react\"\r\n\r\nclass Homepage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.startSongs = this.startSongs.bind(this);\r\n    }\r\n\r\n    startSongs(e) {\r\n        this.props.history.push('/song/1');\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <h1>MuSCLe - Music Score Collection for machine Learning</h1>\r\n                <div className=\"welcome\">\r\n                    <p>Cześć! Dzięki za chwilę twojego czasu. Ankieta powinna zająć maksymalnie do 30 minut.\r\n                        Jeśli chcesz wiedzieć więcej o tym po co to robisz i po co ja to robię - kilknij tutaj lub w\r\n                        nawigacji.</p>\r\n                </div>\r\n\r\n                <h4>Jak będzie wyglądać ankieta?</h4>\r\n                <div className=\"instrukcje\">\r\n                    <ul>\r\n                        <li>posłuchaj 30 sekundowego fragmentu utworu</li>\r\n                        <li>kliknij + jeżeli utwór Ci się podobał, - jeżeli nie</li>\r\n                        <li>po kliknięciu strona automatycznie przeniesie Cię do następnego utworu</li>\r\n                        <li>powtórz operację aż dojdziesz do strony informującej o końcu ankiety</li>\r\n                    </ul>\r\n                </div>\r\n                <p>\r\n                    Kolejne wyświetlane przez aplikację utwory będą bazować na twoich poprzednich ocenach i dobierać\r\n                    piosenki,\r\n                    które odpowiadają twoim gustom. Im więcej utworów ocenisz, tym dokładniejsze będą propozycje. Jak\r\n                    będziesz gotowy\r\n                    kliknij poniższy przycisk, aby rozpocząć.\r\n                </p>\r\n                <div className=\"buttonHolder\">\r\n                    <button className=\"buttonMain\" type=\"button\" onClick={this.startSongs}>ROZPOCZNIJ</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Homepage;\r\n\r\n","import React from \"react\"\r\n\r\nfunction Aboutpage() {\r\n    return(\r\n        <div className=\"about\">\r\n            <h1>About page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Aboutpage;\r\n","import React from \"react\"\r\nimport sound from \"./01 All Of Me.mp3\"\r\n\r\nclass Audioplayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playing: false,\r\n            src: sound,\r\n            cover: \"https://cdn.shopify.com/s/files/1/0812/1837/products/0114-0008_grande.jpeg\",\r\n            title: \"All of me\",\r\n            band: \"Dixie Band\",\r\n            genre: \"jazz\",\r\n            recommended: \"nie\"\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n           <div className=\"audio-container\">\r\n               <div className=\"coverPhoto\">\r\n                   <img src={this.state.cover} alt=\"CD cover\"/>\r\n               </div>\r\n               <div className=\"metadata\">\r\n                   <ul>\r\n                       <li><b>Tytuł</b>: {this.state.title}</li>\r\n                       <li><b>Wykonawca</b>: {this.state.band}</li>\r\n                       <li><b>Gatunek</b>: {this.state.genre}</li>\r\n                       <li><b>Wybrane dla ciebie</b>: {this.state.recommended}</li>\r\n                   </ul>\r\n               </div>\r\n               <div className=\"player\">\r\n                   <audio controls=\"controls\">\r\n                        <source src={this.state.src} />\r\n                   </audio>\r\n               </div>\r\n           </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Audioplayer;","import React from \"react\"\r\nimport Audioplayer from \"./Audioplayer\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport IconButton from \"@material-ui/core/IconButton/index\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\nclass Songpage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.liked = this.liked.bind(this);\r\n        this.disliked = this.disliked.bind(this);\r\n        this.redirect = this.redirect.bind(this);\r\n        this.state = {\r\n            songId: this.props.match.params.id,\r\n            like: null\r\n        };\r\n        this.thumbDown = React.createRef();\r\n        this.thumbUp = React.createRef();\r\n        this.nextSong = React.createRef();\r\n    };\r\n\r\n\r\n    liked(e) {\r\n        //e.target.style.color='#ffffff';\r\n        e.preventDefault();\r\n        this.state.like = true;\r\n        const upBtn = this.thumbUp.current;\r\n        const downBtn = this.thumbDown.current;\r\n        upBtn.style.color = '#d77a61';\r\n        downBtn.style.color = '#0000008A';\r\n        console.log(this.state.like);\r\n    };\r\n\r\n    disliked(e) {\r\n        e.preventDefault();\r\n        this.state.like = false;\r\n        const upBtn = this.thumbUp.current;\r\n        const downBtn = this.thumbDown.current;\r\n        upBtn.style.color = '#0000008A';\r\n        downBtn.style.color = '#d77a61';\r\n        console.log(this.state.like);\r\n    }\r\n\r\n    redirect(e) {\r\n        if (this.state.like === null) {\r\n            window.alert(\"Nie oceniłeś ej\");\r\n        } else {\r\n            let newId = parseInt(this.state.songId);\r\n            newId = newId + 1;\r\n            if (newId > 100) {\r\n                this.props.history.push('/finish');\r\n                window.location.reload();\r\n            } else {\r\n                this.props.history.push('/song/' + newId);\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n\r\n    // <button className=\"buttonGrade\" type=\"button\" onClick={disliked}>-</button>\r\n    render() {\r\n        return (\r\n            <div className=\"audio\">\r\n                <h1>Ocena piosenki {this.state.songId}</h1>\r\n                <Audioplayer/>\r\n                <br/>\r\n                <div className=\"btnPanel\">\r\n                    <div className=\"buttonGradeHolder\">\r\n                        <IconButton className=\"thumbUpBtn\"\r\n                                    aria-label=\"thumb up\"\r\n                                    onClick={this.liked}\r\n                                    ref={this.thumbUp}>\r\n                            <ThumbUpIcon fontSize=\"small\"/>\r\n                        </IconButton>\r\n                        <IconButton className=\"thumbDownBtn\"\r\n                                    aria-label=\"thumb down\"\r\n                                    onClick={this.disliked}\r\n                                    ref={this.thumbDown}>\r\n                            <ThumbDownIcon fontSize=\"small\"/>\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className=\"btnNextHolder\">\r\n                       <p className=\"nextBtn\" ref={this.nextSong} onClick={this.redirect}>Next</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default withRouter(Songpage);","import React, {useEffect} from 'react';\r\nimport NavigationBar from \"./components/NavigationBar\";\r\nimport Homepage from \"./components/Homepage\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Aboutpage from \"./components/Aboutpage\";\r\nimport Songpage from \"./components/Songpage.js\";\r\n\r\nfunction App() {\r\n    /*useEffect(() => {\r\n      fetch(\"/home\").then(response => response.json().then(data => {\r\n          console.log(data);\r\n      })\r\n      );\r\n    },[]);*/\r\n  return (\r\n      <Router>\r\n        <div className=\"container\">\r\n            <NavigationBar/>\r\n            <Switch>\r\n                <Route path={\"/about\"} component={Aboutpage}/>\r\n                <Route path={\"/home\"} component={Homepage} />\r\n                <Route path={\"/song/:id\"} component={Songpage} />\r\n                <Route path={\"/\"} component={Homepage} />\r\n            </Switch>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './muscle.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/01 All Of Me.65c0da04.mp3\";"],"sourceRoot":""}